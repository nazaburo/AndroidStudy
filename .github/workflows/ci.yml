name: CI

on:
  push:
    branches:
      - master
      - develop
    paths-ignore:
      - docs/**
      - README.md
      - LICENSE
  pull_request:
    branches:
      - develop
    paths-ignore:
      - docs/**
      - README.md
      - LICENSE
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # チェックアウト
      - uses: actions/checkout@v2

      # JDKのセットアップ
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      # Gradleのキャッシュ復元
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 依存関係の出力
      - name: Displays the Android dependencies of the project
        run: ./gradlew androidDependencies

      # コンパイル
      - name: Run Compile
        run: ./gradlew assembleDebug

  test:
    runs-on: macos-latest
    steps:
      # チェックアウト
      - uses: actions/checkout@v2

      # JDKのセットアップ
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      # Execute unit tests
      - name: Unit Test with Android Emulator Runner
        uses: ReactiveCircus/android-emulator-runner@v2.14.3
        with:
          api-level: 31
          script: ./gradlew connectedCheck
          #./gradlew createDebugCoverageReport:

        # run: ./gradlew testDebugUnitTest

      - name: generate report
        uses: actions/upload-artifact@v2
        with:
          name: report
          path: app/build/reports/coverage/debug
            # path: app/build/test-results


      - name: Download Test Reports Folder
        uses: actions/download-artifact@v2
        with:
          name: report
          path: app/build/reports/coverage/debug

      - name: Upload Test Report
        run:  bash <(curl -s https://codecov.io/bash) -f "app/build/reports/coverage/debug/report.xml"
        #

  lint:
    runs-on: ubuntu-latest
    steps:
      # チェックアウト
      - uses: actions/checkout@v2

      # JDKのセットアップ
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      # 静的解析
      - name: Run Inspection
        run: ./gradlew lint

      # 結果の表示
      - name: Show results on GitHub
        uses: yutailang0119/action-android-lint@v1
        with:
          xml_path: '**/build/reports/lint-results-*.xml'

      # アーティファクトへアップロード
      - name: Upload results Artifact
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: results
          path: |
            **/build/reports/lint-results-*.html
            **/build/reports/lint-results-*.xml
          if-no-files-found: error
          retention-days: 14

  detekt:
    runs-on: ubuntu-latest
    steps:
      # チェックアウト
      - uses: actions/checkout@v2

      # JDKのセットアップ
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      # 静的解析
      - name: Lint with detekt
        run: ./gradlew detekt

      # アーティファクトへアップロード
      - name: Upload results Artifact
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: results
          path: |
            **/build/reports/detekt/**/*
          if-no-files-found: error
          retention-days: 14

  ktlint:
    runs-on: ubuntu-latest
    steps:
      # チェックアウト
      - uses: actions/checkout@v2

      # JDKのセットアップ
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      # インストール
      - name: Install ktlint
        run: |
          curl -sSLO https://github.com/pinterest/ktlint/releases/download/0.42.1/ktlint
          chmod a+x ktlint
          sudo mv ktlint /usr/local/bin/

      # 静的解析
      - name: Lint with ktlint
        run: ktlint --reporter=checkstyle,output=build/ktlint-report.xml
        continue-on-error: true

      # 結果の表示
      - name: Show results on GitHub
        uses: yutailang0119/action-ktlint@v1
        with:
          xml_path: build/ktlint-report.xml

      # アーティファクトへアップロード
      - name: Upload results Artifact
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: results
          path: |
            **/build/ktlint-report.xml
          if-no-files-found: error
          retention-days: 14